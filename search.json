[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "TBEP-CC",
    "section": "",
    "text": "Preface\nThis is a Quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books.\n\n\nCode\n1 + 1\n\n\n[1] 2",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "The Tampa Bay Estuary Program compiles environmental data from multiple partners to report on the status and trends of key indicators of bay health (Monitoring and Indicators Plan). Indicators and reporting methods currently exist for several components of the CCMP, including water quality, benthic and sediment condition, fish communities, seagrasses, and tidal creeks. Open-source methods have been developed using the tbeptools R package (Beck, Schrandt, et al. 2021) that facilitates data synthesis and routine reporting for each of these indicators.\nAdditional indicators of bay health will complement the existing set of indicators. Key indicators currently missing from TBEP routine reporting products include those related to climate change.  The Tampa Bay Regional Planning Council has produced the Regional Resilience Action Plan (RRAP) to assist local governments and municipalities in planning resilience activities in response to climate change.  Fundamental to these activities is the identification of robust indicators of the local effects of climate change.  These may include data descriptive of sea-level rise, droughts, heat waves, or storm frequency/intensity.  The TBEP is supportive of these efforts and intends to identify several climate change indicators that can be operationalized for routine reporting, either through conventional summary graphics or more interactive web-based platforms.\n\nThis project will identify appropriate climate change indicators to support the TBEP and its partners in making informed planning decisions.  Although the primary goal of TBEP is the management of bay health, these indicators could also be used to support community resilience planning as described in the RRAP.  Appropriate data sources will be identified, with emphasis on those that are stable and planned to be reliable sources in the future.  Identifying indicators that represent relative risk of climate change impacts will be emphasized, as opposed to indicators that simply measure change.  All project activities will leverage open science principles as described in the TBEP Strategic Plan (Burke and Amaral 2020) and Data Management SOP (Beck, Raulerson, et al. 2021).\n\n\n\n\n\n\nBeck, Marcus W., G. E. Raulerson, M. C. Burke, J. Whalen, S. Scolaro, and E. T. Sherwood. 2021. “Tampa Bay Estuary Program: Data Management Standard Operating Procedures.” St. Petersburg, Florida.\n\n\nBeck, Marcus W., Meagan N. Schrandt, Michael R. Wessel, Edward T. Sherwood, Gary E. Raulerson, Adhokshaja Achar Budihal Prasad, and Benjamin D. Best. 2021. “Tbeptools: An R Package for Synthesizing Estuarine Data for Environmental Research.” Journal of Open Source Software 6 (65): 3485. https://doi.org/10.21105/joss.03485.\n\n\nBurke, M., and M. Amaral. 2020. “2021-2025 Strategic Plan.” St. Petersburg, Florida.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Task 1. Assessment of available data and coverage\nData descriptive of the risks of climate change can be obtained from several sources. These may include weather or climatological data, long-term tidal gauge data, or in situ water measurements responsive to climate change. Weather and climatological data could be obtained from local weather stations with long-term data, e.g., Tampa International Airport, and could include measures of air temperature, precipitation, and/or storm intensity/frequency. Tidal gauge data are readily available from the NOAA PORTS data retrieval system. Lastly, in situ water measurements could include water temperature, changes in flow hydrology, salinity, and/or pH. Data used to evaluate potential risks related to ocean acidification should also be explored.\nThe permanency and ease of access of each data source should be noted when making recommendations on indicators to operationalize. Further, indicators that communicate the risks associated with climate change are preferred, as opposed to those that simply indicate change. An example is the number of days in a year when temperature exceeds a critical threshold, as compared to temperature alone. An additional example is frequency of sunny day flooding events, as compared to tidal gauge measurements alone.\nCode\nif (!\"librarian\" %in% rownames(installed.packages()))\n  install.packages(\"librarian\")\nlibrarian::shelf(\n  dplyr, dygraphs, glue, here, leaflet, lubridate, sf,\n  tbep-tech/tbeptools, \n  RColorBrewer, readr, rnoaa, terra, tidyr, webshot2,\n  quiet = T)\n\n# explicitly list packages for renv::dependencies(); renv::snapshot()\nlibrary(dplyr)\nlibrary(dygraphs)\nlibrary(glue)\nlibrary(here)\nlibrary(leaflet)\nlibrary(librarian)\nlibrary(lubridate)\nlibrary(RColorBrewer)\nlibrary(readr)\nlibrary(rnoaa)\nlibrary(sf)\nlibrary(tbeptools)\nlibrary(terra)\nlibrary(tidyr)\nlibrary(webshot2)\n\noptions(readr.show_col_types = F)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#temperature",
    "href": "data.html#temperature",
    "title": "2  Data",
    "section": "2.2 Temperature",
    "text": "2.2 Temperature\n\n2.2.1 Observed\nThe rnoaa R package uses NOAA NCDC API v2, which only goes to 2022-09-15.\n\nNCEI Web Services | Climate Data Online (CDO) | National Center for Environmental Information (NCEI)\nData Tools | Climate Data Online (CDO) | National Climatic Data Center (NCDC)\n\n\n2.2.1.1 Weather stations\n\nTampa International Airport\n\nStart Date: 1939-02-01\nEnd Date: today - 3 days\n\n\nGot token at ncdc.noaa.gov/cdo-web/token. Added variable NOAA_NCDC_CDO_token to:\n\nlocally:\nfile.edit(\"~/.Renviron\")\non GitHub: Repository secrets in Actions secrets · tbep-tech/climate-change-indicators\nGCHN readme\n\nPRCP: Precipitation (tenths of mm)\nTMAX: Maximum temperature (tenths of degrees C)\nTMIN: Minimum temperature (tenths of degrees C)\n\n\n\n\nCode\n# provide NOAA key\noptions(noaakey = Sys.getenv(\"NOAA_NCDC_CDO_token\"))\n\n# Specify datasetid and station\nstn          &lt;- \"GHCND:USW00012842\" # TAMPA INTERNATIONAL AIRPORT, FL US\nstn_csv      &lt;- here(\"data/tpa_ghcnd.csv\")\nstn_meta_csv &lt;- here(\"data/tpa_meta.csv\")\n\nif (!file.exists(stn_meta_csv)){\n  # cache station metadata since timeout from Github Actions\n  stn_meta &lt;- ncdc_stations(\n    datasetid = \"GHCND\", \n    stationid = stn)\n  write_csv(stn_meta$data, stn_meta_csv)\n}\nread_csv(stn_meta_csv)\n\n\n# A tibble: 1 × 9\n  elevation mindate    maxdate    latitude name               datacoverage id   \n      &lt;dbl&gt; &lt;date&gt;     &lt;date&gt;        &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt; &lt;chr&gt;\n1       1.8 1939-02-01 2024-01-09     28.0 TAMPA INTERNATION…            1 GHCN…\n# ℹ 2 more variables: elevationUnit &lt;chr&gt;, longitude &lt;dbl&gt;\n\n\nCode\nif (!file.exists(stn_csv)){\n\n  date_beg &lt;- stn_meta$data$mindate\n  date_end &lt;- stn_meta$data$maxdate\n  max_rows &lt;- 1000\n  vars     &lt;- c(\"PRCP\",\"TMIN\",\"TMAX\")\n  \n  n_vars     &lt;- length(vars)\n  days_batch &lt;- floor(max_rows / n_vars)\n  dates &lt;- unique(c(\n    seq(\n      ymd(date_beg), \n      ymd(date_end), \n      by = glue(\"{days_batch} days\")),\n    ymd(date_end)))\n  \n  n_i &lt;- length(dates) - 1\n  for (i in 1:n_i){\n    # for (i in 14:n_i){\n    date_beg &lt;- dates[i]\n    if (i == n_i){\n      date_end &lt;- dates[i+1]\n    } else {\n      date_end &lt;- dates[i+1] - days(1)\n    }\n    print(glue(\"{i} of {n_i}: {date_beg} to {date_end}  ~  {Sys.time()}\"))\n    \n    # retry if get Error: Service Unavailable (HTTP 503)\n    o           &lt;- NULL\n    attempt     &lt;- 1\n    attempt_max &lt;- 10\n    while (is.null(o) && attempt &lt;= attempt_max) {\n      if (attempt &gt; 1)\n        print(glue(\"  attempt {attempt}\", .trim = F))\n      attempt &lt;- attempt + 1\n      try(\n        o &lt;- ncdc(\n          datasetid  = \"GHCND\", \n          stationid  = stn, \n          datatypeid = vars, \n          startdate  = date_beg,\n          enddate    = date_end,\n          limit      = max_rows) )\n    }\n    \n    if (i == 1) {\n      df &lt;- o$data\n    } else {\n      df &lt;- rbind(df, o$data)\n    }\n  }\n  stopifnot(duplicated(df[,1:2])|&gt; sum() == 0)\n  \n  df &lt;- df |&gt; \n    mutate(\n      date     = as.Date(strptime(\n        date, \"%Y-%m-%dT00:00:00\")),\n      datatype = recode(\n        datatype, \n        PRCP = \"precip_mm\", \n        TMIN = \"temp_c_min\", \n        TMAX = \"temp_c_max\"),\n      value    = value / 10) |&gt; \n    select(\n      -station, # station         : all \"GHCND:USW00012842\"\n      -fl_m,    # measurement flag: 3,524 are \"T\" for trace\n      -fl_t,    # time        flag: all \"2400\"\n      -fl_q)    # quality     flag: all \"\"\n  \n  write_csv(df, stn_csv)\n}\n\nd &lt;- read_csv(stn_csv)\n\nd |&gt; \n  select(date, datatype, value) |&gt;\n  filter(datatype %in% c(\"temp_c_min\",\"temp_c_max\")) |&gt;\n  pivot_wider(\n    names_from  = datatype, \n    values_from = value) |&gt;\n  dygraph(main = \"Daily Temperature (ºC)\") |&gt; \n  dyOptions(\n    colors = brewer.pal(5, \"YlOrRd\")[c(5,3)]) |&gt; \n  dySeries(\"temp_c_min\", label = \"min\") |&gt; \n  dySeries(\"temp_c_max\", label = \"max\")\n\n\n\n\n\n\n\n\nFigure 2.1\n\n\n\n\nCode\nd |&gt; \n  select(date, datatype, value) |&gt;\n  filter(datatype %in% c(\"precip_mm\")) |&gt;\n  pivot_wider(\n    names_from  = datatype, \n    values_from = value) |&gt;\n  dygraph(main = \"Daily Precipitation (mm)\") |&gt; \n  dySeries(\"precip_mm\", label = \"precip\")\n\n\n\n\n\n\n\n\nFigure 2.2\n\n\n\n\nTODO: - trend analysis. e.g. NOAA’s Climate at a Glance. Typically based on the last 30 years, but here we’ve got back to 1939-02-01 so almost 100 years. Keep it 5 years and see how rate changing over time.\n\nsevere weather events? “Sea-level rise exponentially increases coastal flood frequency Mohsen taherkhani”\n\n\n\n2.2.1.2 Satellite",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#precipitation",
    "href": "data.html#precipitation",
    "title": "2  Data",
    "section": "2.3 Precipitation",
    "text": "2.3 Precipitation\nMaterials:\n\n“RAIN AS A DRIVER” in tbep-os-presentations/state_of_the_bay_2023.qmd\nPrecipitation - NEXRAD QPE CDR | National Centers for Environmental Information (NCEI)\n\n\n\nCode\nlibrarian::shelf(\n  dplyr, here, leaflet,\n  # mapview, \n  readxl, sf, tbep-tech/tbeptools)\n# register with renv\nlibrary(dplyr)\nlibrary(here)\nlibrary(leaflet)\n# library(mapview)\nlibrary(readxl)\nlibrary(sf)\nlibrary(tbeptools)\n\n# from SWFWMD grid cells, use only if interested in areas finer than TB watershed\n# this currently gets the same data as the compiled spreadsheet\ngrd &lt;- st_read(here('../tbep-os-presentations/data/swfwmd-GARR-gisfiles-utm/swfwmd_pixel_2_utm_m_83.shp'), quiet = T)\n# mapView(grd)\n\ntbgrdcent &lt;- grd %&gt;%\n  st_transform(crs = st_crs(tbshed)) %&gt;%\n  st_centroid() %&gt;%\n  .[tbshed, ]\n\n# unzip folders\nloc &lt;- here('../tbep-os-presentations/data/swfwmd_rain')\n# files &lt;- list.files(loc, pattern = '.zip', full.names = T)\n# lapply(files, unzip, exdir = loc)\n\n# read text files\nraindat &lt;- list.files(loc, pattern = '19.*\\\\.txt$|20.*\\\\.txt$', full.names = T) %&gt;%\n  lapply(read.table, sep = ',', header = F) %&gt;%\n  do.call('rbind', .) %&gt;%\n  rename(\n    'PIXEL' = V1,\n    'yr' = V2,\n    'inches' = V3) %&gt;%\n  filter(PIXEL %in% tbgrdcent$PIXEL)\n\n# ave rain dat\nraindatave &lt;- raindat %&gt;%\n  summarise(\n    inches = mean(inches, na.rm = T),\n    .by = 'yr')\n\n##\n# use compiled SWFWMD data\n\n# # https://www.swfwmd.state.fl.us/resources/data-maps/rainfall-summary-data-region\n# # file is from the link \"USGS watershed\"\n# download.file(\n#   'https://www4.swfwmd.state.fl.us/RDDataImages/surf.xlsx?_ga=2.186665249.868698214.1705929229-785009494.1704644825',\n#   here('data/swfwmdrainfall.xlsx'),\n#   mode = 'wb'\n#   )\n\nraindatave_url &lt;- \"https://www4.swfwmd.state.fl.us/RDDataImages/surf.xlsx\"\ndir.create(here('data/swfwmd.state.fl.us'))\nraindatave_xl &lt;- here('data/swfwmd.state.fl.us/surf.xlsx')\n\ndownload.file(raindatave_url, raindatave_xl)\nread_excel(raindatave_xl)\n\ndownload.file(raindatave_url, here('data/swfwmdrainfall.xlsx'), mode = 'wb')\n\nraindatave &lt;- read_excel(\n  raindatave_xl, sheet = 'ann-usgsbsn', skip = 1) %&gt;% \n  filter(Year %in% 1975:2023) %&gt;% \n  select(\n    yr = Year, \n    inches = `Tampa Bay/Coastal Areas`\n  ) %&gt;% \n  mutate_all(as.numeric)\n\nraindatave_now &lt;- \nreadxl::read_excel()\n\nraindatave &lt;- read_excel(here('data/swfwmdrainfall.xlsx'), sheet = 'ann-usgsbsn', skip = 1) %&gt;% \n  filter(Year %in% 1975:2023) %&gt;% \n  select(\n    yr = Year, \n    inches = `Tampa Bay/Coastal Areas`\n  ) %&gt;% \n  mutate_all(as.numeric)\n\n# ave chldat\nchlave &lt;- anlz_avedat(epcdata) %&gt;% \n  .$ann %&gt;% \n  filter(var == 'mean_chla') %&gt;% \n  summarise(\n    chla = mean(val, na.rm = T),\n    .by = 'yr'\n  ) %&gt;% \n  filter(yr &gt;= 1975)\n  \ntoplo &lt;- inner_join(chlave, raindatave, by = 'yr')\n\np1 &lt;- ggplot(raindatave, aes(x = yr, y = inches)) +\n  geom_line() +\n  geom_point() +\n  geom_point(data = raindatave[chlave$yr == 2023, ], col = 'red', size = 2) +\n  theme_minimal() +\n  theme(\n    panel.grid.minor = element_blank(),\n  ) + \n  labs(\n    x = NULL, \n    y = 'Annual rainfall (inches)', \n    title = 'Annual rainfall', \n    subtitle = 'Tampa Bay watershed, 1975 - 2023'\n  )\n\np2 &lt;- ggplot(chlave, aes(x = yr, y = chla)) +\n  geom_line() +\n  geom_point() +\n  geom_point(data = chlave[chlave$yr == 2023, ], col = 'red', size = 2) +\n  theme_minimal() +\n  theme(\n    panel.grid.minor = element_blank(),\n  ) + \n  labs(\n    x = NULL, \n    y = 'Chlorophyll-a (ug/L)', \n    title = 'Annual mean chlorophyll-a', \n    subtitle = 'All segments, 1975 - 2023'\n  )\n\np3 &lt;- ggplot(toplo, aes(x = inches, y = chla)) +\n  geom_text_repel(aes(label = yr), point.size = NA, segment.size = NA) +\n  geom_label_repel(data = toplo[toplo$yr == 2023, ], aes(label = yr), color = 'red', point.size = NA) +\n  geom_smooth(formula = y ~ x, method = 'lm', se = F, color = 'red') + \n  # geom_segment(aes(x = 45, xend = 40, y = 4.86, yend = 4.86), color = 'red', arrow = arrow(length = unit(0.2, \"inches\")), linewidth = 1) +\n  theme_minimal() +\n  theme(\n    panel.grid.minor = element_blank(),\n  ) + \n  labs(\n    x = 'Annual rainfall (inches)', \n    y = 'Chlorophyll-a (ug/L)', \n    title = 'Annual mean chlorophyll-a vs. rainfall', \n    caption = 'Data from EPCHC, SWFWMD'\n  )\n\np &lt;- (p1 / p2) | p3\np\n\n\n\n2.3.1 rNOMADS\n\n\nCode\n# librarian::shelf(rNOMADS)\n\n\n\n\n2.3.2 prism\n\nHMS: Hydrologic Micro Services | United States Environmental Protection Agency | US EPA\n\n\nThe Parameter-elevation Relationship on Independent Slopes Model (PRISM) is a combined dataset consisting of ground gauge station and RADAR products. The data is on a 4km grid resolution covering the contiguous United States. Data is available from 1981 to present.PRISM data are reported in GMT (UTC). PRISM provides daily average temperature and dew-point temperature data. Relative humidity is calculated using a version of the August-Roche-Magnus equation as follows ): RH = 100*(EXP((17.625*TD)/(243.04+TD))/EXP((17.625*T)/(243.04+T))) where, RH is % relative humidity, TD is dew-point temperature (celsius), and T is air temperature (celsius).\n\n\nAHPS Precipitation Analysis\n\n“Normal” precipitation is derived from PRISM climate data, created at Oregon State University. The PRISM gridded climate maps are considered the most detailed, highest-quality spatial climate datasets currently available.\n\nprism R package\n\n\n\n\nParameter\nDescription\n\n\n\n\ntmin\nMinimum temperature\n\n\ntmax\nMaximum temperature\n\n\ntmean\nMean temperature (tmean == mean(tmin, tmax))\n\n\ntdmean\nMean dew point temperature\n\n\nppt\nTotal precipitation (rain and snow)\n\n\nvpdmin\nDaily minimum vapor pressure deficit\n\n\nvpdmax\nDaily maximum vapor pressure deficit\n\n\n\n\nData are at 4km resolution, except for the normals which can also be downloaded at 800m resolution.\n\nTemporal data availability:\n\nRecent\n1981 to present\ndaily, monthly, annual data\nHistorical\n1895 through 1980\ncomplete monthly and annual data by year\nNormals\n30-year normals daily, monthly, and annual normals, each as a single grid The 30 year PRISM normal from 1981-2010 is used for precipitation analysis since 2004. Prior to 2004 the 30 year PRISM normal from 1961-1990 is used.\n\n\n\nCode\n# librarian::shelf(glue, here, leaflet, lubridate, \n# # mapview, stars, \n# prism, sf, stringr, tbep-tech/tbeptools, terra)\n\n# renv register libraries\nlibrary(glue)\nlibrary(here)\nlibrary(leaflet)\nlibrary(lubridate)\n# library(mapview)\nlibrary(prism)\n# library(stars)\nlibrary(sf)\nlibrary(stringr)\nlibrary(tbeptools)\nlibrary(terra)\n\ndir_prism &lt;- here(\"tmp/prism\")\ndir.create(dir_prism, showWarnings = F)\nprism_set_dl_dir(dir_prism)\n\n# get_prism_dailys(\n#   type    = \"tmean\", \n#   minDate = today() - days(8), \n#   maxDate = today() - days(1),  # up to yesterday\n#   keepZip = F)\n# prism_archive_clean(\"tmean\")\n# https://prism.nacse.org/downloads/\n#   https://prism.nacse.org/documents/PRISM_downloads_web_service.pdf\n#     http://services.nacse.org/prism/data/public/4km/tmin/20090405\n\n# get_prism_dailys(\n#   type    = \"tmin\", \n#   minDate = \"2024-01-01\", \n#   maxDate = \"2024-03-07\", \n#   keepZip = F)\n# \n# get_prism_dailys(\n#   type    = \"tmax\", \n#   minDate = \"2024-01-01\", \n#   maxDate = \"2024-03-07\", \n#   keepZip = F)\n\n# Get monthly (every month) and annual 30-year normals for precipitation\n# get_prism_normals(\n#   type       = \"ppt\", \n#   resolution = \"800m\", \n#   mon        = 1:12, \n#   annual     = TRUE,\n#   keepZip    = FALSE)\n\n# Plot the January 30-year average temperatures\n# grab only the first value, just in case multiple values are returned\n# pd_tmean_day &lt;- prism_archive_subset(\n#   \"tmean\", \"daily\", dates = \"2024-03-07\")\n# Error in pd_image(pd_tmean_day, col = \"redblue\") : \n#   You can only quick image one file at a time.\n# &gt; pd_tmean_day\n# [1] \"PRISM_tmean_early_4kmD2_20240307_bil\"       \"PRISM_tmean_provisional_4kmD2_20240307_bil\"\n# prism_archive_clean(\"tmean\", \"daily\")  # 'cleans' the prism download data by removing early and/or provisional data if newer (provisional or stable) data also exist for the same variable and temporal period\nperiod &lt;- \"daily\"\nvar    &lt;- \"tmean\"\ndate   &lt;- \"2024-03-07\"\nget_prism_dailys(type=var, dates=date, keepZip=F)\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |======================================================================| 100%\n\n\nCode\npd_tmean_day &lt;- prism_archive_subset(var, period, dates = date)\npd_image(pd_tmean_day, col=\"redblue\")\n\n\n\n\n\n\n\n\n\nCode\n# pd_ppt_nrml &lt;- prism_archive_subset(\n#   \"ppt\", \"monthly normals\", \n#   mon = 1, resolution = \"800m\")\n# (path_ppt_nrml &lt;- pd_to_file(pd_ppt_nrml))\n\n# raster stack ----\nvar    &lt;- \"tmean\"\nperiod &lt;- \"daily\"\n\nget_prism_dailys(\n  type    = var, \n  minDate = today() - days(3),  # last 3 days\n  maxDate = today() - days(1),  # up to yesterday\n  keepZip = F)\n\n\n\n  |                                                                            \n  |                                                                      |   0%\n  |                                                                            \n  |=======================                                               |  33%\n  |                                                                            \n  |===============================================                       |  67%\n  |                                                                            \n  |======================================================================| 100%\n\n\nCode\nprism_archive_clean(var, period)\n\npd       &lt;- prism_archive_subset(var, period)\npd_dates &lt;- pd_get_date(pd)\n\nr &lt;- pd_stack(pd) |&gt; \n  rast()\n# tbshed_pd &lt;- tbshed |&gt; \ntbshed_pd &lt;- tbsegshed |&gt; \n  st_transform(crs(r, proj=T))\n# sf broken, so Warning: Cannot find proj.db\nr_tb &lt;- r |&gt; \n  crop(tbshed_pd, mask = T, touches = T) |&gt;\n  trim()\n\n# TODO: summarize by tbeptools::tbsegshed, zip code\n\n# r_tif &lt;- here(\"tmp/prism\", glue(\"tmean_20240307_bil\")\n# terra::writeRaster(r_tb, , overwrite = T)\n\ndate &lt;- max(pd_dates)\ni    &lt;- which(pd_dates == date)\nlyr  &lt;- glue(\"{var}&lt;br&gt;{period}&lt;br&gt;{date}\")\n\n# terra::writeRaster(r_tb[[i]], here(\"tmp\", glue(\"{var}_{date}.tif\")), overwrite = T)\n\n# mapView(r_tb[[i]], layer.name = lyr) +\n#   mapView(tbshed_pd)\n# sf broken, so Error: Cannot find proj.db\n\nlibrary(leaflet)\nleaflet() |&gt;\n  addProviderTiles(\n    providers$CartoDB.Positron) |&gt;\n  addRasterImage(\n    r_tb[[i]], opacity = 0.7) |&gt; \n  addPolygons(\n    data = tbsegshed, \n    fillOpacity = 0, \n    color = \"black\", weight = 1)\n\n\n\n\n\n\nTODO:\n\ncompare these precip data w/ Water District data to make case for using PRISM data\n\nQuestions:\n\nGiven variability within each polygon, which of these products shall we use to plot: min(min_temp), mean(mean_temp), max(max_temp); min(mean_temp), mean(mean_temp), max(max_temp)?\n\n\n\n2.3.3 Communicating results\n\nChoi et al. (2024) North-South disparity in impact of climate change on “outdoor days”. Journal of Climate\n\nnews summary: A new way to quantify climate change impacts: “Outdoor days” | MIT News | Massachusetts Institute of Technology\nShiny app: California Outdoor Days | Eltahir Research Group",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#sea-level-rise",
    "href": "data.html#sea-level-rise",
    "title": "2  Data",
    "section": "2.4 Sea Level Rise",
    "text": "2.4 Sea Level Rise\nSea level rise occurs from principally two sources: 1) thermal expansion; and 2) freshwater inputs from glacial melting. Data for these trends can be obtained from NOAA’s Sea Level Trends (Figure 2.3)\nTypes of data:\n\nObserved (past, present) - tide gauge - satellite, e.g. Laboratory for Satellite Altimetry / Sea Level Rise\n\nLevel-3 products distributed through NOAA CoastWatch (Sea Level Anomaly and along-track altimetry)\n\nProjected (future). modeled\n\n\n2.4.1 Gauges\n\n\n\n\n\n\nFigure 2.3: Screenshot of NOAA’s Sea Level Trends zoomed into the Tampa Bay.\n\n\n\n\nPORTS: Tampa Bay PORTS - NOAA Tides & Currents\n\n\n\nCode\nlibrarian::shelf(\n  ropensci/rnoaa)\n# register with renv\nlibrary(rnoaa)\n\n\n\n\n2.4.2 Satellite\n\nNOAA / NESDIS / STAR - Laboratory for Satellite Altimetry / Sea Level Rise\n\n\n\nCode\nslr_nc    &lt;- here(\"data/slr/slr_map_txj1j2.nc\")\nr_slr_gcs &lt;- rast(slr_nc)  # 0.5 degree resolution\nr_slr_mer &lt;- projectRasterForLeaflet(r_slr_gcs, method=\"bilinear\")\n\nb &lt;- st_bbox(tbsegshed)\nr_slr_tb_mer &lt;- rast(slr_nc) |&gt; \n  crop(b) # |&gt; \n  # projectRasterForLeaflet(method=\"bilinear\")\n# only one value for Tampa Bay extracted at 0.5 degree resolution\n# values(r_slr_tb_mer, mat=F, na.rm=T)  # 5.368306\n\nb &lt;- st_bbox(tbshed)\nplet(r_slr_mer, tiles=providers$Esri.OceanBasemap) |&gt; \n  addProviderTiles(providers$CartoDB.DarkMatterOnlyLabels) |&gt; \n  addPolygons(data = tbsegshed) |&gt;\n  fitBounds(\n    lng1 = b[[\"xmin\"]], lat1 = b[[\"ymin\"]], \n    lng2 = b[[\"xmax\"]], lat2 = b[[\"ymax\"]])\n\n\n\n\n\n\n\n\nFigure 2.4",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#severe-weather",
    "href": "data.html#severe-weather",
    "title": "2  Data",
    "section": "2.5 Severe Weather",
    "text": "2.5 Severe Weather\n\nSWDI vignette • rnoaa\n\n\n\n\n\n\nFigure 2.3: Screenshot of NOAA’s Sea Level Trends zoomed into the Tampa Bay.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Beck, Marcus W., G. E. Raulerson, M. C. Burke, J. Whalen, S. Scolaro,\nand E. T. Sherwood. 2021. “Tampa Bay Estuary Program: Data\nManagement Standard Operating Procedures.” St. Petersburg,\nFlorida.\n\n\nBeck, Marcus W., Meagan N. Schrandt, Michael R. Wessel, Edward T.\nSherwood, Gary E. Raulerson, Adhokshaja Achar Budihal Prasad, and\nBenjamin D. Best. 2021. “Tbeptools: An R Package for Synthesizing\nEstuarine Data for Environmental Research.” Journal of Open\nSource Software 6 (65): 3485. https://doi.org/10.21105/joss.03485.\n\n\nBurke, M., and M. Amaral. 2020. “2021-2025 Strategic Plan.”\nSt. Petersburg, Florida.",
    "crumbs": [
      "References"
    ]
  }
]